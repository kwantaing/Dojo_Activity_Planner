// <auto-generated />
using System;
using CSharpBelt.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CSharpBelt.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CSharpBelt.Models.DojoActivity", b =>
                {
                    b.Property<int>("activity_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Coordinatoruser_id");

                    b.Property<int>("coordinator_id");

                    b.Property<DateTime>("date");

                    b.Property<string>("description")
                        .IsRequired();

                    b.Property<int>("duration");

                    b.Property<string>("durationType")
                        .IsRequired();

                    b.Property<string>("name")
                        .IsRequired();

                    b.Property<TimeSpan>("time");

                    b.HasKey("activity_id");

                    b.HasIndex("Coordinatoruser_id");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("CSharpBelt.Models.Plan", b =>
                {
                    b.Property<int>("plan_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("activity_id");

                    b.Property<int>("user_id");

                    b.HasKey("plan_id");

                    b.HasIndex("activity_id");

                    b.HasIndex("user_id");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("CSharpBelt.Models.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("created_at");

                    b.Property<string>("email")
                        .IsRequired();

                    b.Property<string>("name")
                        .IsRequired();

                    b.Property<string>("password")
                        .IsRequired();

                    b.Property<DateTime>("updated_at");

                    b.HasKey("user_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CSharpBelt.Models.DojoActivity", b =>
                {
                    b.HasOne("CSharpBelt.Models.User", "Coordinator")
                        .WithMany()
                        .HasForeignKey("Coordinatoruser_id");
                });

            modelBuilder.Entity("CSharpBelt.Models.Plan", b =>
                {
                    b.HasOne("CSharpBelt.Models.DojoActivity", "Activity")
                        .WithMany("Plans")
                        .HasForeignKey("activity_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CSharpBelt.Models.User", "Participant")
                        .WithMany("Plans")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
